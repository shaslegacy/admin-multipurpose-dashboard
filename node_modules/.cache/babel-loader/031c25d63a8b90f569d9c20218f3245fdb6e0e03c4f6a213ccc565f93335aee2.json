{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { blogCategoryService } from \"./bCategoryService\";\nconst initialState = {\n  categories: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const getCategories = createAsyncThunk(\"category/get-categories\", async thunkAPI => {\n  try {\n    return await blogCategoryService.getCategories();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const createNewblogCat = createAsyncThunk(\"blogCategory/create-category\", async (catData, thunkAPI) => {\n  try {\n    return await blogCategoryService.createBlogCategory(catData);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const getABlogCat = createAsyncThunk(\"blogCategory/get-category\", async (id, thunkAPI) => {\n  try {\n    return await blogCategoryService.getBlogCategory(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const updateABlogCat = createAsyncThunk(\"blogCategory/update-category\", async (blogCat, thunkAPI) => {\n  try {\n    return await blogCategoryService.updateBlogCategory(blogCat);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const deleteABlogCat = createAsyncThunk(\"blogCategory/delete-category\", async (id, thunkAPI) => {\n  try {\n    return await blogCategoryService.deleteBlogCategory(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst blogCategorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCategories.pending, state => {\n      state.isLoading = true;\n    }).addCase(getCategories.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.categories = action.payload;\n      state.message = \"success\";\n    }).addCase(getCategories.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n  }\n});\nexport default blogCategorySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","blogCategoryService","initialState","categories","isError","isLoading","isSuccess","message","getCategories","thunkAPI","error","rejectWithValue","createNewblogCat","catData","createBlogCategory","getABlogCat","id","getBlogCategory","updateABlogCat","blogCat","updateBlogCategory","deleteABlogCat","deleteBlogCategory","blogCategorySlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/shashiojha/Documents/pansari-ecom/admin-panel/legacy-app/src/features/bcategory/bCategorySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { blogCategoryService } from \"./bCategoryService\";\n\nconst initialState = {\n    categories: [],\n    isError: false,\n    isLoading: false,\n    isSuccess: false,\n    message: \"\",\n};\n\nexport const getCategories = createAsyncThunk(\n    \"category/get-categories\",\n    async (thunkAPI) => {\n        try {\n            return await blogCategoryService.getCategories();\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error);\n        }\n    }\n);\n\nexport const createNewblogCat = createAsyncThunk(\n    \"blogCategory/create-category\",\n    async (catData, thunkAPI) => {\n      try {\n        return await blogCategoryService.createBlogCategory(catData);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  \n  export const getABlogCat = createAsyncThunk(\n    \"blogCategory/get-category\",\n    async (id, thunkAPI) => {\n      try {\n        return await blogCategoryService.getBlogCategory(id);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  export const updateABlogCat = createAsyncThunk(\n    \"blogCategory/update-category\",\n    async (blogCat, thunkAPI) => {\n      try {\n        return await blogCategoryService.updateBlogCategory(blogCat);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  \n  export const deleteABlogCat = createAsyncThunk(\n    \"blogCategory/delete-category\",\n    async (id, thunkAPI) => {\n      try {\n        return await blogCategoryService.deleteBlogCategory(id);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n\nconst blogCategorySlice = createSlice({\n    name: \"category\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n        .addCase(getCategories.pending, (state) => {\n            state.isLoading = true;\n        })\n        .addCase(getCategories.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.categories = action.payload;\n            state.message = \"success\";\n        })\n        .addCase(getCategories.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n        })\n    }\n});\n\nexport default blogCategorySlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}