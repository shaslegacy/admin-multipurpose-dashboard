{"ast":null,"code":"import React from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const TimeConverter=_ref=>{let{createdAt}=_ref;const formatDate=createdAt=>{const date=new Date(createdAt);const options={month:'long',day:'numeric',year:'numeric',hour:'numeric',minute:'numeric',hour12:true};return\"\".concat(date.toLocaleDateString('en-US',options));};const getTimeAgo=createdAt=>{const now=new Date();const diff=now-new Date(createdAt);if(diff<60000){// Less than a minute\nreturn'just now';}else if(diff<3600000){// Less than an hour\nconst minutes=Math.floor(diff/60000);return\"about \".concat(minutes,\" minute\").concat(minutes!==1?'s':'',\" ago\");}else if(diff<86400000){// Less than a day\nconst hours=Math.floor(diff/3600000);return\"about \".concat(hours,\" hour\").concat(hours!==1?'s':'',\" ago\");}else if(diff<172800000){// Less than two days\nreturn'Yesterday';}else{return formatDate(createdAt);}};return/*#__PURE__*/_jsx(\"div\",{children:getTimeAgo(createdAt)});};export default TimeConverter;","map":{"version":3,"names":["React","jsx","_jsx","TimeConverter","_ref","createdAt","formatDate","date","Date","options","month","day","year","hour","minute","hour12","concat","toLocaleDateString","getTimeAgo","now","diff","minutes","Math","floor","hours","children"],"sources":["/Users/shashiojha/Documents/pansari-ecom/admin-panel/admin-multipurpose-dashboard/src/components/core/TimeConverter.js"],"sourcesContent":["import React from 'react';\n\nconst TimeConverter = ({ createdAt }) => {\n\n  const formatDate = (createdAt) => {\n    const date = new Date(createdAt);\n    const options = { \n      month: 'long', \n      day: 'numeric', \n      year: 'numeric',\n      hour: 'numeric', \n      minute: 'numeric', \n      hour12: true \n    };\n    return `${date.toLocaleDateString('en-US', options)}`;\n  };\n\n  const getTimeAgo = (createdAt) => {\n    const now = new Date();\n    const diff = now - new Date(createdAt);\n    if (diff < 60000) { // Less than a minute\n      return 'just now';\n    } else if (diff < 3600000) { // Less than an hour\n      const minutes = Math.floor(diff / 60000);\n      return `about ${minutes} minute${minutes !== 1 ? 's' : ''} ago`;\n    } else if (diff < 86400000) { // Less than a day\n      const hours = Math.floor(diff / 3600000);\n      return `about ${hours} hour${hours !== 1 ? 's' : ''} ago`;\n    } else if (diff < 172800000) { // Less than two days\n      return 'Yesterday';\n    } else {\n      return formatDate(createdAt);\n    }\n  };\n\n  return (\n    <div>\n      {getTimeAgo(createdAt)}\n    </div>\n  );\n};\n\nexport default TimeConverter;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1B,KAAM,CAAAC,aAAa,CAAGC,IAAA,EAAmB,IAAlB,CAAEC,SAAU,CAAC,CAAAD,IAAA,CAElC,KAAM,CAAAE,UAAU,CAAID,SAAS,EAAK,CAChC,KAAM,CAAAE,IAAI,CAAG,GAAI,CAAAC,IAAI,CAACH,SAAS,CAAC,CAChC,KAAM,CAAAI,OAAO,CAAG,CACdC,KAAK,CAAE,MAAM,CACbC,GAAG,CAAE,SAAS,CACdC,IAAI,CAAE,SAAS,CACfC,IAAI,CAAE,SAAS,CACfC,MAAM,CAAE,SAAS,CACjBC,MAAM,CAAE,IACV,CAAC,CACD,SAAAC,MAAA,CAAUT,IAAI,CAACU,kBAAkB,CAAC,OAAO,CAAER,OAAO,CAAC,EACrD,CAAC,CAED,KAAM,CAAAS,UAAU,CAAIb,SAAS,EAAK,CAChC,KAAM,CAAAc,GAAG,CAAG,GAAI,CAAAX,IAAI,CAAC,CAAC,CACtB,KAAM,CAAAY,IAAI,CAAGD,GAAG,CAAG,GAAI,CAAAX,IAAI,CAACH,SAAS,CAAC,CACtC,GAAIe,IAAI,CAAG,KAAK,CAAE,CAAE;AAClB,MAAO,UAAU,CACnB,CAAC,IAAM,IAAIA,IAAI,CAAG,OAAO,CAAE,CAAE;AAC3B,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAG,KAAK,CAAC,CACxC,eAAAJ,MAAA,CAAgBK,OAAO,YAAAL,MAAA,CAAUK,OAAO,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,SAC3D,CAAC,IAAM,IAAID,IAAI,CAAG,QAAQ,CAAE,CAAE;AAC5B,KAAM,CAAAI,KAAK,CAAGF,IAAI,CAACC,KAAK,CAACH,IAAI,CAAG,OAAO,CAAC,CACxC,eAAAJ,MAAA,CAAgBQ,KAAK,UAAAR,MAAA,CAAQQ,KAAK,GAAK,CAAC,CAAG,GAAG,CAAG,EAAE,SACrD,CAAC,IAAM,IAAIJ,IAAI,CAAG,SAAS,CAAE,CAAE;AAC7B,MAAO,WAAW,CACpB,CAAC,IAAM,CACL,MAAO,CAAAd,UAAU,CAACD,SAAS,CAAC,CAC9B,CACF,CAAC,CAED,mBACEH,IAAA,QAAAuB,QAAA,CACGP,UAAU,CAACb,SAAS,CAAC,CACnB,CAAC,CAEV,CAAC,CAED,cAAe,CAAAF,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}