{"ast":null,"code":"import{createSlice,createAsyncThunk,createAction}from\"@reduxjs/toolkit\";import enquiryService from\"./enquiryService\";const initialState={enquiries:[],isError:false,isLoading:false,isSuccess:false,message:\"\"};export const getEnquiries=createAsyncThunk(\"enquiry/get-enquiries\",async thunkAPI=>{try{return await enquiryService.getEnquiries();}catch(error){return thunkAPI.rejectWithValue(error);}});export const deleteAEnquiry=createAsyncThunk(\"enquiry/delete-enquiry\",async(id,thunkAPI)=>{try{return await enquiryService.deleteEnquiry(id);}catch(error){return thunkAPI.rejectWithValue(error);}});export const getAEnquiry=createAsyncThunk(\"enquiry/get-enquiry\",async(id,thunkAPI)=>{try{return await enquiryService.getEnquiry(id);}catch(error){return thunkAPI.rejectWithValue(error);}});export const updateAEnquiry=createAsyncThunk(\"enquiry/update-enquiry\",async(enq,thunkAPI)=>{try{return await enquiryService.udpateEnquiry(enq);}catch(error){return thunkAPI.rejectWithValue(error);}});export const resetState=createAction(\"Reset_all\");const enquirySlice=createSlice({name:\"enquiry\",initialState,reducers:{},extraReducers:builder=>{builder.addCase(getEnquiries.pending,state=>{state.isLoading=true;}).addCase(getEnquiries.fulfilled,(state,action)=>{state.isLoading=false;state.isError=false;state.isSuccess=true;state.enquiries=action.payload;state.message=\"success\";}).addCase(getEnquiries.rejected,(state,action)=>{state.isLoading=false;state.isError=true;state.isSuccess=false;state.message=action.error;}).addCase(deleteAEnquiry.pending,state=>{state.isLoading=true;}).addCase(deleteAEnquiry.fulfilled,(state,action)=>{state.isLoading=false;state.isError=false;state.isSuccess=true;state.deletedEnquiry=action.payload;}).addCase(deleteAEnquiry.rejected,(state,action)=>{state.isLoading=false;state.isError=true;state.isSuccess=false;state.message=action.error;}).addCase(getAEnquiry.pending,state=>{state.isLoading=true;}).addCase(getAEnquiry.fulfilled,(state,action)=>{state.isLoading=false;state.isError=false;state.isSuccess=true;state.enqName=action.payload.name;state.enqMobile=action.payload.mobile;state.enqEmail=action.payload.email;state.enqComment=action.payload.comment;state.enqStatus=action.payload.status;}).addCase(getAEnquiry.rejected,(state,action)=>{state.isLoading=false;state.isError=true;state.isSuccess=false;state.message=action.error;}).addCase(updateAEnquiry.pending,state=>{state.isLoading=true;}).addCase(updateAEnquiry.fulfilled,(state,action)=>{state.isLoading=false;state.isError=false;state.isSuccess=true;state.updatedEnquiry=action.payload;}).addCase(updateAEnquiry.rejected,(state,action)=>{state.isLoading=false;state.isError=true;state.isSuccess=false;state.message=action.error;}).addCase(resetState,()=>initialState);}});export default enquirySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createAction","enquiryService","initialState","enquiries","isError","isLoading","isSuccess","message","getEnquiries","thunkAPI","error","rejectWithValue","deleteAEnquiry","id","deleteEnquiry","getAEnquiry","getEnquiry","updateAEnquiry","enq","udpateEnquiry","resetState","enquirySlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","deletedEnquiry","enqName","enqMobile","mobile","enqEmail","email","enqComment","comment","enqStatus","status","updatedEnquiry","reducer"],"sources":["/Users/shashiojha/Documents/pansari-ecom/admin-panel/admin-multipurpose-dashboard/src/features/enquiry/enquirySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport enquiryService from \"./enquiryService\";\n\nconst initialState = {\n    enquiries: [],\n    isError: false,\n    isLoading: false,\n    isSuccess: false,\n    message: \"\",\n};\n\nexport const getEnquiries = createAsyncThunk(\n    \"enquiry/get-enquiries\", \n    async (thunkAPI) => {\n        try {\n            return await enquiryService.getEnquiries();\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error);\n        }\n    }\n);\n\nexport const deleteAEnquiry = createAsyncThunk(\n    \"enquiry/delete-enquiry\",\n    async (id, thunkAPI) => {\n      try {\n        return await enquiryService.deleteEnquiry(id);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  export const getAEnquiry = createAsyncThunk(\n    \"enquiry/get-enquiry\",\n    async (id, thunkAPI) => {\n      try {\n        return await enquiryService.getEnquiry(id);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  \n  export const updateAEnquiry = createAsyncThunk(\n    \"enquiry/update-enquiry\",\n    async (enq, thunkAPI) => {\n      try {\n        return await enquiryService.udpateEnquiry(enq);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  export const resetState = createAction(\"Reset_all\");\n\nconst enquirySlice = createSlice({\n    name: \"enquiry\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n        .addCase(getEnquiries.pending, (state) => {\n            state.isLoading = true;\n        })\n        .addCase(getEnquiries.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.enquiries = action.payload;\n            state.message = \"success\";\n        })\n        .addCase(getEnquiries.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n        })\n        .addCase(deleteAEnquiry.pending, (state) => {\n            state.isLoading = true;\n          })\n          .addCase(deleteAEnquiry.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.deletedEnquiry = action.payload;\n          })\n          .addCase(deleteAEnquiry.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n          })\n          .addCase(getAEnquiry.pending, (state) => {\n            state.isLoading = true;\n          })\n          .addCase(getAEnquiry.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.enqName = action.payload.name;\n            state.enqMobile = action.payload.mobile;\n            state.enqEmail = action.payload.email;\n            state.enqComment = action.payload.comment;\n            state.enqStatus = action.payload.status;\n          })\n          .addCase(getAEnquiry.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n          })\n          .addCase(updateAEnquiry.pending, (state) => {\n            state.isLoading = true;\n          })\n          .addCase(updateAEnquiry.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.updatedEnquiry = action.payload;\n          })\n          .addCase(updateAEnquiry.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n          })\n          .addCase(resetState, () => initialState);\n    }\n});\n\nexport default enquirySlice.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}