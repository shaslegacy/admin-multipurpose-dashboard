{"ast":null,"code":"import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport { colorService } from \"./colorService\";\nconst initialState = {\n  colors: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const getColors = createAsyncThunk(\"color/get-colors\", async thunkAPI => {\n  try {\n    return await colorService.getColors();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const createColor = createAsyncThunk(\"color/create-color\", async (colorData, thunkAPI) => {\n  try {\n    return await colorService.createColor(colorData);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const getAColor = createAsyncThunk(\"color/get-color\", async (id, thunkAPI) => {\n  try {\n    return await colorService.getColor(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const updateAColor = createAsyncThunk(\"color/update-color\", async (color, thunkAPI) => {\n  try {\n    return await colorService.updateColor(color);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const deleteAColor = createAsyncThunk(\"color/delete-color\", async (id, thunkAPI) => {\n  try {\n    return await colorService.deleteColor(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const resetState = createAction(\"Reset_all\");\nconst colorSlice = createSlice({\n  name: \"color\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getColors.pending, state => {\n      state.isLoading = true;\n    }).addCase(getColors.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.colors = action.payload;\n      state.message = \"success\";\n    }).addCase(getColors.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(createColor.pending, state => {\n      state.isLoading = true;\n    }).addCase(createColor.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.createdColor = action.payload;\n    }).addCase(createColor.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(updateAColor.pending, state => {\n      state.isLoading = true;\n    }).addCase(updateAColor.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.updatedColor = action.payload;\n    }).addCase(updateAColor.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(getAColor.pending, state => {\n      state.isLoading = true;\n    }).addCase(getAColor.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.colorName = action.payload.title;\n    }).addCase(getAColor.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(deleteAColor.pending, state => {\n      state.isLoading = true;\n    }).addCase(deleteAColor.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.deletedColor = action.payload.title;\n    }).addCase(deleteAColor.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(resetState, () => initialState);\n  }\n});\nexport default colorSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createAction","colorService","initialState","colors","isError","isLoading","isSuccess","message","getColors","thunkAPI","error","rejectWithValue","createColor","colorData","getAColor","id","getColor","updateAColor","color","updateColor","deleteAColor","deleteColor","resetState","colorSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","createdColor","updatedColor","colorName","title","deletedColor","reducer"],"sources":["/Users/shashiojha/Documents/pansari-ecom/admin-panel/legacy-app/src/features/color/colorSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport { colorService } from \"./colorService\";\n\nconst initialState = {\n    colors: [],\n    isError: false,\n    isLoading: false,\n    isSuccess: false,\n    message: \"\",\n};\n\nexport const getColors = createAsyncThunk(\n    \"color/get-colors\",\n    async (thunkAPI) => {\n        try {\n            return await colorService.getColors();\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error);\n        }\n    }\n);\n\n\nexport const createColor = createAsyncThunk(\n    \"color/create-color\",\n    async (colorData, thunkAPI) => {\n      try {\n        return await colorService.createColor(colorData);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  \n  export const getAColor = createAsyncThunk(\n    \"color/get-color\",\n    async (id, thunkAPI) => {\n      try {\n        return await colorService.getColor(id);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  export const updateAColor = createAsyncThunk(\n    \"color/update-color\",\n    async (color, thunkAPI) => {\n      try {\n        return await colorService.updateColor(color);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  \n  export const deleteAColor = createAsyncThunk(\n    \"color/delete-color\",\n    async (id, thunkAPI) => {\n      try {\n        return await colorService.deleteColor(id);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  \n  export const resetState = createAction(\"Reset_all\");\n\nconst colorSlice = createSlice({\n    name: \"color\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n        .addCase(getColors.pending, (state) => {\n            state.isLoading = true;\n        })\n        .addCase(getColors.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.colors = action.payload;\n            state.message = \"success\";\n        })\n        .addCase(getColors.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n        })\n        .addCase(createColor.pending, (state) => {\n            state.isLoading = true;\n          })\n          .addCase(createColor.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.createdColor = action.payload;\n          })\n          .addCase(createColor.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n          })\n          .addCase(updateAColor.pending, (state) => {\n            state.isLoading = true;\n          })\n          .addCase(updateAColor.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.updatedColor = action.payload;\n          })\n          .addCase(updateAColor.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n          })\n          .addCase(getAColor.pending, (state) => {\n            state.isLoading = true;\n          })\n          .addCase(getAColor.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.colorName = action.payload.title;\n          })\n          .addCase(getAColor.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n          })\n          .addCase(deleteAColor.pending, (state) => {\n            state.isLoading = true;\n          })\n          .addCase(deleteAColor.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.deletedColor = action.payload.title;\n          })\n          .addCase(deleteAColor.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n          })\n          .addCase(resetState, () => initialState);\n    }\n});\n\nexport default colorSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}