{"ast":null,"code":"import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import customerService from\"./customerService\";export const getUsers=createAsyncThunk(\"customer/get-customers\",async thunkAPI=>{try{return await customerService.getUsers();}catch(error){return thunkAPI.rejectWithValue(error);}});const initialState={customers:[],isError:false,isLoading:false,isSuccess:false,message:\"\"};export const customerSlice=createSlice({name:\"users\",initialState,reducers:{},extraReducers:builder=>{builder.addCase(getUsers.pending,state=>{state.isLoading=true;}).addCase(getUsers.fulfilled,(state,action)=>{state.isLoading=false;state.isError=false;state.isSuccess=true;state.customers=action.payload;state.message=\"success\";}).addCase(getUsers.rejected,(state,action)=>{state.isLoading=false;state.isError=true;state.isSuccess=false;state.message=action.error;});}});export default customerSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","customerService","getUsers","thunkAPI","error","rejectWithValue","initialState","customers","isError","isLoading","isSuccess","message","customerSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/shashiojha/Documents/pansari-ecom/admin-panel/admin-multipurpose-dashboard/src/features/customers/customerSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport customerService from \"./customerService\";\n\n\nexport const getUsers = createAsyncThunk(\n  \"customer/get-customers\",\n  async (thunkAPI) => {\n    try {\n      return await customerService.getUsers();\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nconst initialState = {\n  customers: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\",\n};\n\nexport const customerSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n    .addCase(getUsers.pending, (state) => {\n      state.isLoading = true;\n    })\n    .addCase(getUsers.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.customers = action.payload;\n      state.message = \"success\";\n    })\n    .addCase(getUsers.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n  },\n});\n\nexport default customerSlice.reducer;"],"mappings":"AAAA,OAASA,WAAW,CAAEC,gBAAgB,KAAQ,kBAAkB,CAChE,MAAO,CAAAC,eAAe,KAAM,mBAAmB,CAG/C,MAAO,MAAM,CAAAC,QAAQ,CAAGF,gBAAgB,CACtC,wBAAwB,CACxB,KAAO,CAAAG,QAAQ,EAAK,CAClB,GAAI,CACF,MAAO,MAAM,CAAAF,eAAe,CAACC,QAAQ,CAAC,CAAC,CACzC,CAAE,MAAOE,KAAK,CAAE,CACd,MAAO,CAAAD,QAAQ,CAACE,eAAe,CAACD,KAAK,CAAC,CACxC,CACF,CACF,CAAC,CAED,KAAM,CAAAE,YAAY,CAAG,CACnBC,SAAS,CAAE,EAAE,CACbC,OAAO,CAAE,KAAK,CACdC,SAAS,CAAE,KAAK,CAChBC,SAAS,CAAE,KAAK,CAChBC,OAAO,CAAE,EACX,CAAC,CAED,MAAO,MAAM,CAAAC,aAAa,CAAGb,WAAW,CAAC,CACvCc,IAAI,CAAE,OAAO,CACbP,YAAY,CACZQ,QAAQ,CAAE,CAAC,CAAC,CACZC,aAAa,CAAGC,OAAO,EAAK,CAC1BA,OAAO,CACNC,OAAO,CAACf,QAAQ,CAACgB,OAAO,CAAGC,KAAK,EAAK,CACpCA,KAAK,CAACV,SAAS,CAAG,IAAI,CACxB,CAAC,CAAC,CACDQ,OAAO,CAACf,QAAQ,CAACkB,SAAS,CAAE,CAACD,KAAK,CAAEE,MAAM,GAAK,CAC9CF,KAAK,CAACV,SAAS,CAAG,KAAK,CACvBU,KAAK,CAACX,OAAO,CAAG,KAAK,CACrBW,KAAK,CAACT,SAAS,CAAG,IAAI,CACtBS,KAAK,CAACZ,SAAS,CAAGc,MAAM,CAACC,OAAO,CAChCH,KAAK,CAACR,OAAO,CAAG,SAAS,CAC3B,CAAC,CAAC,CACDM,OAAO,CAACf,QAAQ,CAACqB,QAAQ,CAAE,CAACJ,KAAK,CAAEE,MAAM,GAAK,CAC7CF,KAAK,CAACV,SAAS,CAAG,KAAK,CACvBU,KAAK,CAACX,OAAO,CAAG,IAAI,CACpBW,KAAK,CAACT,SAAS,CAAG,KAAK,CACvBS,KAAK,CAACR,OAAO,CAAGU,MAAM,CAACjB,KAAK,CAC9B,CAAC,CAAC,CACJ,CACF,CAAC,CAAC,CAEF,cAAe,CAAAQ,aAAa,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}