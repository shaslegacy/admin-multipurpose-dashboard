{"ast":null,"code":"var _jsxFileName = \"/Users/shashiojha/Documents/pansari-ecom/admin-panel/legacy-app/src/pages/ecommerce/categories/addCatagory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport Bredcrumb from 'src/components/core/Bredcrumb';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { createCategory, getAProductCategory, resetState, updateAProductCategory } from 'src/features/pcategory/categorySlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet schema = yup.object().shape({\n  title: yup.string().required(\"Category Name is Required\")\n});\nconst AddCatagory = () => {\n  _s();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const getPCatId = location.pathname.split(\"/\")[4];\n  console.log(location.pathname);\n  const navigate = useNavigate();\n  const newCategory = useSelector(state => state.categories);\n  const {\n    isSuccess,\n    isError,\n    isLoading,\n    createdCategory,\n    categoryName,\n    updatedCategory\n  } = newCategory;\n  useEffect(() => {\n    if (getPCatId !== undefined) {\n      dispatch(getAProductCategory(getPCatId));\n    } else {\n      dispatch(resetState());\n    }\n  }, [getPCatId]);\n  useEffect(() => {\n    if (isSuccess && createdCategory) {\n      toast.success(\"Category Added Successfully!\");\n    }\n    if (isSuccess && updatedCategory) {\n      toast.success(\"Category Updated Successfullly!\");\n      navigate(\"/admin/mera-bazzar/categories\");\n    }\n    if (isError) {\n      toast.error(\"Something Went Wrong!\");\n    }\n  }, [isSuccess, isError, isLoading]);\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      title: categoryName || \"\"\n    },\n    validationSchema: schema,\n    onSubmit: values => {\n      if (getPCatId !== undefined) {\n        const data = {\n          id: getPCatId,\n          pCatData: values\n        };\n        dispatch(updateAProductCategory(data));\n        dispatch(resetState());\n      } else {\n        dispatch(createCategory(values));\n        formik.resetForm();\n        setTimeout(() => {\n          dispatch(resetState());\n        }, 300);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"content\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container-fluid\",\n      children: [/*#__PURE__*/_jsxDEV(Bredcrumb, {\n        title: `${getPCatId !== undefined ? \"Edit\" : \"Add\"} Category`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"col-lg-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"card\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"card-body\",\n              children: /*#__PURE__*/_jsxDEV(\"form\", {\n                action: \"\",\n                onSubmit: formik.handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"form-group\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    for: \"catName\",\n                    children: [\"Category Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"text-danger\",\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 68\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    id: \"catName\",\n                    name: \"title\",\n                    class: \"form-control\",\n                    placeholder: \"Enter Category Name\",\n                    onChange: formik.handleChange(\"title\"),\n                    onBlur: formik.handleBlur(\"title\"),\n                    value: formik.values.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 33\n                  }, this), formik.touched.title && formik.errors.title ? /*#__PURE__*/_jsxDEV(\"small\", {\n                    id: \"emailHelp\",\n                    class: \"form-text text-danger\",\n                    children: formik.errors.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 37\n                  }, this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  class: \"col-12 text-center\",\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    class: \"btn btn-success waves-effect waves-light m-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fe-check-circle mr-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 108\n                    }, this), \" \", getPCatId !== undefined ? \"Edit\" : \"Add\", \" Category\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    class: \"btn btn-light waves-effect waves-light m-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fe-x mr-1\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 106\n                    }, this), \" Cancel\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(AddCatagory, \"DR7hqCdC/nkDWlhk4K6tOvO9cy8=\", false, function () {\n  return [useDispatch, useLocation, useNavigate, useSelector, useFormik];\n});\n_c = AddCatagory;\nexport default AddCatagory;\nvar _c;\n$RefreshReg$(_c, \"AddCatagory\");","map":{"version":3,"names":["React","useEffect","Bredcrumb","useDispatch","useSelector","useLocation","useNavigate","toast","yup","useFormik","createCategory","getAProductCategory","resetState","updateAProductCategory","jsxDEV","_jsxDEV","schema","object","shape","title","string","required","AddCatagory","_s","dispatch","location","getPCatId","pathname","split","console","log","navigate","newCategory","state","categories","isSuccess","isError","isLoading","createdCategory","categoryName","updatedCategory","undefined","success","error","formik","enableReinitialize","initialValues","validationSchema","onSubmit","values","data","id","pCatData","resetForm","setTimeout","class","children","fileName","_jsxFileName","lineNumber","columnNumber","action","handleSubmit","for","type","name","placeholder","onChange","handleChange","onBlur","handleBlur","value","touched","errors","_c","$RefreshReg$"],"sources":["/Users/shashiojha/Documents/pansari-ecom/admin-panel/legacy-app/src/pages/ecommerce/categories/addCatagory.jsx"],"sourcesContent":["import React, { useEffect } from 'react'\nimport Bredcrumb from 'src/components/core/Bredcrumb'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport * as yup from \"yup\";\nimport { useFormik } from \"formik\";\nimport { createCategory, getAProductCategory, resetState, updateAProductCategory } from 'src/features/pcategory/categorySlice';\n\nlet schema = yup.object().shape({\n    title: yup.string().required(\"Category Name is Required\"),\n    });\n\nconst AddCatagory = () => {\n\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const getPCatId = location.pathname.split(\"/\")[4];\n  console.log(location.pathname);\n  const navigate = useNavigate();\n  const newCategory = useSelector((state) => state.categories);\n  const {\n    isSuccess,\n    isError,\n    isLoading,\n    createdCategory,\n    categoryName,\n    updatedCategory,\n  } = newCategory;\n\n  useEffect(() => {\n    if (getPCatId !== undefined) {\n      dispatch(getAProductCategory(getPCatId));\n    } else {\n      dispatch(resetState());\n    }\n  }, [getPCatId]);\n\n  useEffect(() => {\n    if (isSuccess && createdCategory) {\n      toast.success(\"Category Added Successfully!\");\n    }\n    if (isSuccess && updatedCategory) {\n      toast.success(\"Category Updated Successfullly!\");\n      navigate(\"/admin/mera-bazzar/categories\");\n    }\n    if (isError) {\n      toast.error(\"Something Went Wrong!\");\n    }\n  }, [isSuccess, isError, isLoading]);\n\n  const formik = useFormik({\n    enableReinitialize: true,\n    initialValues: {\n      title: categoryName || \"\",\n    },\n    validationSchema: schema,\n    onSubmit: (values) => {\n      if (getPCatId !== undefined) {\n        const data = { id: getPCatId, pCatData: values };\n        dispatch(updateAProductCategory(data));\n        dispatch(resetState());\n      } else {\n        dispatch(createCategory(values));\n        formik.resetForm();\n        setTimeout(() => {\n          dispatch(resetState());\n        }, 300);\n      }\n    }\n  })\n\n  return (\n    <div class=\"content\">\n        <div class=\"container-fluid\">\n            \n            <Bredcrumb title={`${getPCatId !== undefined ? \"Edit\" : \"Add\"} Category`}/>\n\n            <div class=\"row\">\n            <div class=\"col-lg-12\">\n                <div class=\"card\">\n                    <div class=\"card-body\">\n                        <form action=\"\" onSubmit={formik.handleSubmit}>\n                            <div class=\"form-group\">\n                                <label for=\"catName\">Category Name <span class=\"text-danger\">*</span></label>\n                                <input\n                                    type=\"text\"\n                                    id=\"catName\"\n                                    name='title'\n                                    class=\"form-control\"\n                                    placeholder=\"Enter Category Name\"\n                                    onChange={formik.handleChange(\"title\")}\n                                    onBlur={formik.handleBlur(\"title\")}\n                                    value={formik.values.title}\n                                />\n                                {formik.touched.title && formik.errors.title ? (\n                                    <small id=\"emailHelp\" class=\"form-text text-danger\">{formik.errors.title}</small>\n                                ): null}\n                            </div>\n                            \n                            <div class=\"col-12 text-center\">\n                                <button type=\"submit\" class=\"btn btn-success waves-effect waves-light m-1\"><i class=\"fe-check-circle mr-1\"></i> {getPCatId !== undefined ? \"Edit\" : \"Add\"} Category</button>\n                                <button type=\"button\" class=\"btn btn-light waves-effect waves-light m-1\"><i class=\"fe-x mr-1\"></i> Cancel</button>\n                            </div>\n                        </form>\n\n                    </div>\n                </div>\n            </div>\n            </div>\n            \n        </div> \n    </div>\n  )\n}\n\nexport default AddCatagory"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}