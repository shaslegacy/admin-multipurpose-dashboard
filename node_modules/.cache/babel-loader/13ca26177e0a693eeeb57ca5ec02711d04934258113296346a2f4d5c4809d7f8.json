{"ast":null,"code":"import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport { categoryService } from \"./categoryService\";\nconst initialState = {\n  categories: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const getCategories = createAsyncThunk(\"category/get-categories\", async thunkAPI => {\n  try {\n    return await categoryService.getCategories();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const createCategory = createAsyncThunk(\"productCategory/create-category\", async (categoryData, thunkAPI) => {\n  try {\n    return await categoryService.createCategory(categoryData);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const updateAProductCategory = createAsyncThunk(\"productCategory/update-category\", async (category, thunkAPI) => {\n  try {\n    return await categoryService.updateProductCategory(category);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const deleteAProductCategory = createAsyncThunk(\"productCategory/delete-category\", async (id, thunkAPI) => {\n  try {\n    return await categoryService.deleteProductCategory(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const getAProductCategory = createAsyncThunk(\"productCategory/get-product-category\", async (id, thunkAPI) => {\n  try {\n    return await categoryService.getProductCategory(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const resetState = createAction(\"RevertAll\");\nconst categorySlice = createSlice({\n  name: \"category\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getCategories.pending, state => {\n      state.isLoading = true;\n    }).addCase(getCategories.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.categories = action.payload;\n      state.message = \"success\";\n    }).addCase(getCategories.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n  }\n});\nexport default categorySlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createAction","categoryService","initialState","categories","isError","isLoading","isSuccess","message","getCategories","thunkAPI","error","rejectWithValue","createCategory","categoryData","updateAProductCategory","category","updateProductCategory","deleteAProductCategory","id","deleteProductCategory","getAProductCategory","getProductCategory","resetState","categorySlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/shashiojha/Documents/pansari-ecom/admin-panel/legacy-app/src/features/pcategory/categorySlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport { categoryService } from \"./categoryService\";\n\nconst initialState = {\n    categories: [],\n    isError: false,\n    isLoading: false,\n    isSuccess: false,\n    message: \"\",\n};\n\nexport const getCategories = createAsyncThunk(\n    \"category/get-categories\",\n    async (thunkAPI) => {\n        try {\n            return await categoryService.getCategories();\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error);\n        }\n    }\n);\n\nexport const createCategory = createAsyncThunk(\n    \"productCategory/create-category\",\n    async (categoryData, thunkAPI) => {\n      try {\n        return await categoryService.createCategory(categoryData);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  export const updateAProductCategory = createAsyncThunk(\n    \"productCategory/update-category\",\n    async (category, thunkAPI) => {\n      try {\n        return await categoryService.updateProductCategory(category);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  \n  export const deleteAProductCategory = createAsyncThunk(\n    \"productCategory/delete-category\",\n    async (id, thunkAPI) => {\n      try {\n        return await categoryService.deleteProductCategory(id);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  export const getAProductCategory = createAsyncThunk(\n    \"productCategory/get-product-category\",\n    async (id, thunkAPI) => {\n      try {\n        return await categoryService.getProductCategory(id);\n      } catch (error) {\n        return thunkAPI.rejectWithValue(error);\n      }\n    }\n  );\n  export const resetState = createAction(\"RevertAll\");\n\nconst categorySlice = createSlice({\n    name: \"category\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n        .addCase(getCategories.pending, (state) => {\n            state.isLoading = true;\n        })\n        .addCase(getCategories.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.categories = action.payload;\n            state.message = \"success\";\n        })\n        .addCase(getCategories.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n        })\n    }\n});\n\nexport default categorySlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}