{"ast":null,"code":"import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport productService from \"./productService\";\nconst initialState = {\n  products: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const getProducts = createAsyncThunk(\"product/get-products\", async thunkAPI => {\n  try {\n    return await productService.getProducts();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const getProduct = createAsyncThunk(\"product/get-product\", async (id, thunkAPI) => {\n  try {\n    return await productService.getProduct(id);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const createProducts = createAsyncThunk(\"product/create-products\", async (productData, thunkAPI) => {\n  try {\n    return await productService.createProduct(productData);\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nexport const resetState = createAction(\"Reset_all\");\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(getProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.products = action.payload;\n      state.message = \"success\";\n    }).addCase(getProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(getProduct.pending, state => {\n      state.isLoading = true;\n    }).addCase(getProduct.fulfilled, (state, action) => {\n      state.isError = false;\n      state.isLoading = false;\n      state.isSuccess = true;\n      state.product = action.payload;\n      state.message = \"success\";\n    }).addCase(getProduct.rejected, (state, action) => {\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n      state.isLoading = false;\n    }).addCase(createProducts.pending, state => {\n      state.isLoading = true;\n    }).addCase(createProducts.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.createdProduct = action.payload;\n    }).addCase(createProducts.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    }).addCase(resetState, () => initialState);\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","createAction","productService","initialState","products","isError","isLoading","isSuccess","message","getProducts","thunkAPI","error","rejectWithValue","getProduct","id","createProducts","productData","createProduct","resetState","productSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","product","createdProduct","reducer"],"sources":["/Users/shashiojha/Documents/pansari-ecom/admin-panel/admin-multipurpose-dashboard/src/features/product/productSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk, createAction } from \"@reduxjs/toolkit\";\nimport productService from \"./productService\";\n\nconst initialState = {\n  products: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\",\n};\n\nexport const getProducts = createAsyncThunk(\n  \"product/get-products\",\n  async (thunkAPI) => {\n    try {\n      return await productService.getProducts();\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const getProduct = createAsyncThunk(\n  \"product/get-product\",\n  async (id, thunkAPI) => {\n    try {\n      return await productService.getProduct(id);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const createProducts = createAsyncThunk(\n  \"product/create-products\",\n  async (productData, thunkAPI) => {\n    try {\n      return await productService.createProduct(productData);\n    } catch (error) {\n      return thunkAPI.rejectWithValue(error);\n    }\n  }\n);\n\nexport const resetState = createAction(\"Reset_all\");\n\nconst productSlice = createSlice({\n  name: \"product\",\n  initialState,\n  reducers: {},\n  extraReducers: (builder) => {\n    builder\n      .addCase(getProducts.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getProducts.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isError = false;\n        state.isSuccess = true;\n        state.products = action.payload;\n        state.message = \"success\";\n      })\n      .addCase(getProducts.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.isSuccess = false;\n        state.message = action.error;\n      })\n      .addCase(getProduct.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(getProduct.fulfilled, (state, action) => {\n        state.isError = false;\n        state.isLoading = false;\n        state.isSuccess = true;\n        state.product = action.payload;\n        state.message = \"success\";\n      })\n      .addCase(getProduct.rejected, (state, action) => {\n        state.isError = true;\n        state.isSuccess = false;\n        state.message = action.error;\n        state.isLoading = false;\n      })\n      .addCase(createProducts.pending, (state) => {\n        state.isLoading = true;\n      })\n      .addCase(createProducts.fulfilled, (state, action) => {\n        state.isLoading = false;\n        state.isError = false;\n        state.isSuccess = true;\n        state.createdProduct = action.payload;\n      })\n      .addCase(createProducts.rejected, (state, action) => {\n        state.isLoading = false;\n        state.isError = true;\n        state.isSuccess = false;\n        state.message = action.error;\n      })\n      .addCase(resetState, () => initialState);\n  },\n});\n\nexport default productSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}