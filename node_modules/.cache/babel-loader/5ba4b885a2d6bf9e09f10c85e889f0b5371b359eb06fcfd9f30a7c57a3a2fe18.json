{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport brandService from \"./brandService\";\nconst initialState = {\n  brands: [],\n  isError: false,\n  isLoading: false,\n  isSuccess: false,\n  message: \"\"\n};\nexport const getBrands = createAsyncThunk(\"brand/get-brands\", async thunkAPI => {\n  try {\n    return await brandService.getBrands();\n  } catch (error) {\n    return thunkAPI.rejectWithValue(error);\n  }\n});\nconst brandSlice = createSlice({\n  name: \"brand\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getBrands.pending, state => {\n      state.isLoading = true;\n    }).addCase(getBrands.fulfilled, (state, action) => {\n      state.isLoading = false;\n      state.isError = false;\n      state.isSuccess = true;\n      state.brands = action.payload;\n      state.message = \"success\";\n    }).addCase(getBrands.rejected, (state, action) => {\n      state.isLoading = false;\n      state.isError = true;\n      state.isSuccess = false;\n      state.message = action.error;\n    });\n  }\n});\nexport default brandSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","brandService","initialState","brands","isError","isLoading","isSuccess","message","getBrands","thunkAPI","error","rejectWithValue","brandSlice","name","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","reducer"],"sources":["/Users/shashiojha/Documents/pansari-ecom/admin-panel/legacy-app/src/features/brand/brandSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport brandService from \"./brandService\";\n\nconst initialState = {\n    brands: [],\n    isError: false,\n    isLoading: false,\n    isSuccess: false,\n    message: \"\",\n};\n\nexport const getBrands = createAsyncThunk(\n    \"brand/get-brands\", \n    async (thunkAPI) => {\n        try {\n            return await brandService.getBrands();\n        } catch (error) {\n            return thunkAPI.rejectWithValue(error);\n        }\n    }\n);\n\nconst brandSlice = createSlice({\n    name: \"brand\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n        .addCase(getBrands.pending, (state) => {\n            state.isLoading = true;\n        })\n        .addCase(getBrands.fulfilled, (state, action) => {\n            state.isLoading = false;\n            state.isError = false;\n            state.isSuccess = true;\n            state.brands = action.payload;\n            state.message = \"success\";\n        })\n        .addCase(getBrands.rejected, (state, action) => {\n            state.isLoading = false;\n            state.isError = true;\n            state.isSuccess = false;\n            state.message = action.error;\n        })\n    }\n});\n\nexport default brandSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,MAAMC,YAAY,GAAG;EACjBC,MAAM,EAAE,EAAE;EACVC,OAAO,EAAE,KAAK;EACdC,SAAS,EAAE,KAAK;EAChBC,SAAS,EAAE,KAAK;EAChBC,OAAO,EAAE;AACb,CAAC;AAED,OAAO,MAAMC,SAAS,GAAGR,gBAAgB,CACrC,kBAAkB,EAClB,MAAOS,QAAQ,IAAK;EAChB,IAAI;IACA,OAAO,MAAMR,YAAY,CAACO,SAAS,CAAC,CAAC;EACzC,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZ,OAAOD,QAAQ,CAACE,eAAe,CAACD,KAAK,CAAC;EAC1C;AACJ,CACJ,CAAC;AAED,MAAME,UAAU,GAAGb,WAAW,CAAC;EAC3Bc,IAAI,EAAE,OAAO;EACbX,YAAY;EACZY,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACNC,OAAO,CAACT,SAAS,CAACU,OAAO,EAAGC,KAAK,IAAK;MACnCA,KAAK,CAACd,SAAS,GAAG,IAAI;IAC1B,CAAC,CAAC,CACDY,OAAO,CAACT,SAAS,CAACY,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC7CF,KAAK,CAACd,SAAS,GAAG,KAAK;MACvBc,KAAK,CAACf,OAAO,GAAG,KAAK;MACrBe,KAAK,CAACb,SAAS,GAAG,IAAI;MACtBa,KAAK,CAAChB,MAAM,GAAGkB,MAAM,CAACC,OAAO;MAC7BH,KAAK,CAACZ,OAAO,GAAG,SAAS;IAC7B,CAAC,CAAC,CACDU,OAAO,CAACT,SAAS,CAACe,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAC5CF,KAAK,CAACd,SAAS,GAAG,KAAK;MACvBc,KAAK,CAACf,OAAO,GAAG,IAAI;MACpBe,KAAK,CAACb,SAAS,GAAG,KAAK;MACvBa,KAAK,CAACZ,OAAO,GAAGc,MAAM,CAACX,KAAK;IAChC,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEF,eAAeE,UAAU,CAACY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}